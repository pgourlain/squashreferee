@inject IJSRuntime JsRuntime

<div class="one-team">
    <div class="playername playername-@side">
        <input @bind="CurrentPlayerName" class="playernameEdit"/>
    </div>
    <div class="bignumbercontainer">
        <span class="bignumber" @onclick="OnBigNumberClick" @ontouchstart="OnBigNumberTap">@Player.Score</span>
    </div>
</div>


@code {

    [Parameter]
    public bool IsRight { get; set; } = false;

    [Parameter]
    public SquashGame Game { get; set; } = null;

    [Parameter]
    public SquashPlayer Player { get; set; } = null;

    private PlayerEnum currentPlayer;
    private bool mobile;

    private string CurrentPlayerName
    {
        get { return Player.Name; }
        set { Player.Name = value; }
    }

    private string side;

    protected override async Task OnInitializedAsync()
    {
        currentPlayer = Player == Game.Player1 ? PlayerEnum.PlayerOne : PlayerEnum.PlayerTwo;
        side = currentPlayer == PlayerEnum.PlayerOne ? "left" : "right";
        mobile = await JsRuntime.InvokeAsync<bool>("isDevice");
    }

    private Task OnBigNumber()
    {
        if (Game.Status == GameStatus.TossChoice)
        {
            Game.SetPlayerWinToss(currentPlayer);
        }
        else if (Game.Status == GameStatus.Playing)
        {
            Game.AddPoint(currentPlayer);
            StateHasChanged();
        }
        return Task.CompletedTask;
    }

    private Task OnBigNumberTap()
    {
        return OnBigNumber();
    }

    private Task OnBigNumberClick()
    {
        if (mobile) return Task.CompletedTask;
        return OnBigNumber();
    }

}