@page "/"
@page "/index.html"

<div class="main">
    <div class="header">
        <span>menu1</span>
        <span>menu2</span>
    </div>
    <div class="left-player">
        <Team PlayerName="@game.Player1.Name" IsRight="false" Game="@game"></Team>
    </div>
    <div class="timer">
        <span>@game.Status</span>
        <button type="button" class="button brounded" @onclick="OnStartClick"><span>Start</span><br /><span>Timer</span></button>        
    </div>

    <div class="right-player">
        <Team PlayerName="@game.Player2.Name" IsRight="true" Game="@game"></Team>
    </div>


    @if (IsLeft)
    {
        <div style="grid-area: mainfooter">
            <button class="servicebutton brounded" @onclick="SwitchServiceSide">@ServiceSide</button>
        </div>
    }
    else
    {
        <div style="grid-area: mainfooter;" class="right">
            <button class="servicebutton brounded" @onclick="SwitchServiceSide">@ServiceSide</button>
        </div>
    }

</div>

@code {

    private SquashGame game;
    private SquashGameUIWrapper eventWrapper = new SquashGameUIWrapper();

    bool IsLeft 
    { 
        get
        {
            return game.Server == PlayerEnum.PlayerTwo;
        }
    }

    string ServiceSide
    {
        get
        {
            switch(game.ServiceSide)
            {
                case PlayerSideEnum.Left : return "L";
                case PlayerSideEnum.Right: return "R";
                default: return "?";
            }
        }
    }

    protected override Task OnInitializedAsync()
    {
        game = new SquashGame(null);
        game.GameUICallBack = eventWrapper;
        eventWrapper.OnChooseToss += OnChooseToss;
        return base.OnInitializedAsync();
    }

    private Task SwitchServiceSide()
    {
        game.switchServiceSide();
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task OnStartClick()
    {
        if (game.Status == GameStatus.NotStarted)
        {
            game.StartGame();
            StateHasChanged();
        }
        return Task.CompletedTask;

    }

    private void OnChooseToss(object? sender, EventArgs args)
    {
        //TODO
    }
}